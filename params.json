{"name":"Xigt","tagline":"XML format for Interlinear Glossed Text","body":"Xigt\r\n====\r\n\r\nA library for extensible Interlinear glossed text (IGT)\r\n\r\nXigt is created with extensibility in mind, offering a core framework\r\nand XML schema (in RelaxNG) ready to be extended without much trouble.\r\nA small example:\r\n\r\n```xml\r\n<igt id=\"i1\" lg=\"spa\">\r\n  <tier type=\"words\" id=\"w\">\r\n    <item id=\"w1\">cocinas</item>\r\n  </tier>\r\n  <tier type=\"morphemes\" id=\"m\" ref=\"w\">\r\n    <item id=\"m1\" ref=\"w1[0:5]\"/>\r\n    <item id=\"m2\" ref=\"w1[5:7]\"/>\r\n  </tier>\r\n  <tier type=\"glosses\" id=\"g\" ref=\"m\">\r\n    <item id=\"g1\" ref=\"m1\">cook</item>\r\n    <item id=\"g2\" ref=\"m2\">2</item>\r\n    <item id=\"g3\" ref=\"m2\">SG</item>\r\n    <item id=\"g4\" ref=\"m2\">PRS</item>\r\n    <item id=\"g5\" ref=\"m2\">IND</item>\r\n  </tier>\r\n</igt>\r\n```\r\n\r\n### Features\r\n\r\nXigt has several features that help enable complex alignments, and\r\nthese features can be ignored for simpler IGT.\r\n\r\n##### Alignment Expressions\r\n\r\nGiven:\r\n  \r\n```xml\r\n<item id=\"a1\">one</item>\r\n<item id=\"a2\">two</item>\r\n```\r\n        \r\nThe following alignment expressions will align to the following selections:\r\n\r\n```python\r\na1                  -> \"one\"\r\na1,a2               -> \"one two\"\r\na1+a2               -> \"onetwo\"\r\na1[0:1]             -> \"o\"\r\na1[0:1,2:3]         -> \"oe\"\r\na1[1:3]+a2[1:2+0:1] -> \"newt\"\r\n```\r\n\r\n##### Floating Alignments\r\n\r\nWhen more than one item align to the same selection, they are in a floating alignment.\r\nThat is, they are ordered (as in the XML), but have no definite subpartitioning among\r\nthem. For instance, given the following item:\r\n\r\n```xml\r\n<item id=\"s1\">A dog barks.</item>\r\n```\r\n\r\n...and the following aligned items all aligned to the same item above:\r\n\r\n```xml\r\n<item id=\"w1\" ref=\"s1\">A</item>\r\n<item id=\"w2\" ref=\"s1\">dog</item>\r\n<item id=\"w3\" ref=\"s1\">barks</item>\r\n```\r\n\r\nXigt will maintain the order \\[\"A\", \"dog\", \"barks\"\\] (i.e. not \\[\"dog\", \"A\", \"barks\"\\] and so on),\r\nbut does not specify the selections (i.e. character spans) from the aligned item. In other words,\r\nit is understood that **w1**, **w2**, and **w3** are contained by **s1** and in that order, but\r\nthere is no explicit character alignments. This is\r\nuseful when one does not want to delimit items exactly, or when one cannot delimit the sub-items\r\n(e.g. glosses for portmanteau morphemes).\r\n\r\n##### Data Inheritance\r\n\r\nItems can provide content, but if they don't, they inherit it from items they align to. For\r\nexample, one can delimit the morphemes of the word in item **w3** above as follows:\r\n\r\n```xml\r\n<item id=\"w3\" ref=\"s1\">barks</item>\r\n...\r\n<item id=\"m1\" ref=\"w3[0:4]\"/>\r\n<item id=\"m2\" ref=\"w3[4:5]\"/>\r\n```\r\n\r\nItems **m1** and **m2** do not provide their own content, so their content is inherited from the specified\r\nspans of **w3**. That is, **m1**'s content is implicitly \"bark\", and **m2**'s is implicitly \"s\".\r\nLater items refer to the relative character positions of the inherited content. For example,\r\nreferencing \"m2[0:1]\" is the character \"s\" (aside: since it's the entire content of **m2**, it's the same\r\nas referencing \"m2\").\r\n\r\n##### Data Shadowing\r\n\r\nWhen an item **x** provides content, later items referring to **x** can only select alignments to **x**'s\r\ncontent, and not that of any items **x** refers to. For example, in the following, the content of **y** is\r\n\"t\", and not \"o\".\r\n\r\n```xml\r\n<item id=\"w\">one</item>\r\n...\r\n<item id=\"x\" ref=\"w\">two</item>\r\n...\r\n<item id=\"y\" ref=\"x[0:1]\"/>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}