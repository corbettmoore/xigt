#--------------
#--- Basics ---
#--------------

# The id and ref attributes are used by <tier> and <item> elements to establish
# alignments amongst the data. <item> elements may use Alignment Expressions to
# establish one-to-many relationships.
Id = xsd:string { pattern="[A-Za-z][\-.\w]*" }

Ref = xsd:string { pattern="[A-Za-z][\-.\w]*" }

AlgnExpr = xsd:string {
    pattern="[A-Za-z][\-.\w]*(\[\d+:\d+([,+]\d+:\d+)*\])?([,+][A-Za-z][\-.\w]*(\[\d+:\d+([,+]\d+:\d+)*\])?)*"
}

# Metadata element (mostly unconstrained)
Metadata = element metadata {
    attribute type { Metadata.type }?,
    Metadata.attrs,
    Metadata.content
}
Metadata.type = "xigt-meta"
Metadata.attrs = empty
Metadata.content = anything
anything = (text | element * { attribute * { text }*, anything})*

#--- Document-wide Definitions ---

Igt.id = Id
Tier.id = Id
Tier.ref = Ref
Tier.content = notAllowed
Item.id = Id
Item.ref = AlgnExpr
Item.content = notAllowed

#--- Include Structural Definitions ---

# Root element
start = XigtCorpus
XigtCorpus = element xigt-corpus {
    XigtCorpus.attrs,
    XigtCorpus.metadata,
    XigtCorpus.content
}
# no corpus-level attributes by default, but they can be added via extensions
XigtCorpus.attrs &= attribute id { Id }?
XigtCorpus.metadata = Metadata?
XigtCorpus.content = Igt*
Igt = element igt {
    attribute id { Igt.id },
    Igt.subtype
}
Igt.subtype = attribute type { Igt.type }?,
              Igt.metadata,
              Igt.content
Igt.type = notAllowed
Igt.metadata = Metadata?
Igt.content = (BasicTier | Tier)*

Tier = notAllowed

#------------------------
#--- Default subtypes ---
#------------------------

BasicTier |= grammar { include "xigt-tier.rnc" {
    Tier.type = "phrases"
    Item.type = ( "original" | "transliteration" )
} }
     | grammar { include "xigt-tier.rnc" {
    Tier.type = "words"
} }
     | grammar { include "xigt-tier.rnc" {
    Tier.type = "morphemes"
    Item.type |= ( "affix" | "clitic" )
} }
     | grammar { include "xigt-tier.rnc" {
    Tier.type = "glosses"
    Item.type |= ( "leipzig" | "lexeme" )
} }
     | grammar { include "xigt-tier.rnc" {
    Tier.type = "translations"
} }
     | grammar { include "xigt-tier.rnc" {
    Tier.type = "alignments"
    Tier.content = attribute alignref { Ref },
                   (Item | parent Tier.content)*
    Item.content = attribute alignref { AlgnExpr }
} }
